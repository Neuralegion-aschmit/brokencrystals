version: '3'

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_DB: bc
      POSTGRES_USER: bc
      POSTGRES_PASSWORD: bc
    volumes:
    - ./pg.sql:/docker-entrypoint-initdb.d/pg.sql

  nodejs:
    image: neuralegion/brokencrystals
    container_name: nodejs
    restart: unless-stopped
    depends_on:
      - db

  watchtower:
    image: neuralegion/watchtower-ecr
    logging:
      options:
        max-file: "5"
        max-size: "10m"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 300 --debug

  nginx:
    image: nginx:1.15-alpine
    container_name: webserver
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#    command: ['/bin/bash', '-c', 'sleep 3h']
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nodejs

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    container_name: certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
  
volumes:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: ./public/build
      o: bind
  keys-dir:
    driver: local
    driver_opts:
      type: none
      device: ./config/keys
      o: bind
  nginx-conf-dir:
    driver: local
    driver_opts:
      type: none
      device: ./nginx-config
      o: bind
  letsencrypt:

